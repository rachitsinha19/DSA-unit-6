#include <iostream>
#include <vector>

using namespace std;

const int MAX_ATTENDEES = 10;

void findCelebrity(vector<vector<int>>& matrix, int n) {
    vector<int> knows(n, 0);

    // Check each person as a potential celebrity
    for (int i = 0; i < n; ++i) {
        // If i knows someone, they are not a celebrity
        if (knows[i]) continue;

        // Check if everyone else knows i
        for (int j = 0; j < n; ++j) {
            if (i != j && matrix[j][i] == 0) {
                // i does not know someone, so i is not a celebrity
                knows[i] = 0;
                break;
            }
        }

        // If we reach here, i is still a potential celebrity
        if (knows[i] != 0) {
            // Check if i knows anyone else
            for (int j = 0; j < n; ++j) {
                if (i != j && matrix[i][j] != 0) {
                    // i knows someone, so i is not a celebrity
                    knows[i] = 0;
                    break;
                }
            }
        }
    }

    // Check if there is a celebrity
    for (int i = 0; i < n; ++i) {
        if (knows[i]) {
            // Check if i is known by everyone else
            for (int j = 0; j < n; ++j) {
                if (i != j && matrix[i][j] == 0) {
                    // i is not known by someone, so i is not a celebrity
                    cout << "There is no celebrity at the party." << endl;
                    return;
                }
            }

            cout << "A celebrity is present at index " << i << " in the list of attendees." << endl;
            return;
        }
    }

    cout << "There is no celebrity at the party." << endl;
}

int main() {
    int n;
    cin >> n;

    vector<vector<int>> matrix(n, vector<int>(n, 0));

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cin >> matrix[i][j];
        }
    }

    findCelebrity(matrix, n);

    return 0;
}
